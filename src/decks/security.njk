{% extends "base.njk" %}

{% block slides %}
<section>
    <h1>CMPUT 404</h1>
    <h3>Web Applications and Architecture</h3>
    <h2>Web Security</h2>
    <p>
      <small>Created by <br>
        <a href="http://softwareprocess.es">Abram Hindle</a>
        (<a href="mailto:abram.hindle@ualberta.ca">abram.hindle@ualberta.ca</a>) <br>
        and Hazel Campbell (<a href="mailto:hazel.campbell@ualberta.ca">hazel.campbell@ualberta.ca</a>).<br>
        Copyright 2014-2023.
      </small>
    </p>
</section>
<section style="font-size: 90%;">
    <h3>Goals of Web Security</h3>
    <dl>
        <dt>Leak Prevention</dt>
        <dd>Prevent unauthorized access of information owned by the organization (business, school...)</dd>
        <dt>User Privacy</dt>
        <dd>Prevent unauthorized access of other user's information
            <ul>
                <li>Other users by logged-in users</li>
                <li>All users by logged-out users</li>
                <li>Legally required!</li>
            </ul>
        </dd>
    </dl>
</section>
<section style="font-size: 80%;">
    <h3>Goals of Web Security</h3>
    <dl>
        <dt>RCE on Server</dt>
        <dd>Prevent code that is unauthorized/unknown/dangerous/etc. from being run on the server by people outside of the organization/business.
            <ul>
            <li>Ransomware</li>
            <li>Miners</li>
            <li>Proxies & Botnets</li>
        </ul>
        </dd>
        <dt>XSS</dt>
        <dd><b>Cross</b> <b>S</b>ite <b>S</b>cripting. Unauthorized code or actions running on the <em>client</em>, usually the browser.
            <ul>
                <li>Reflected</li>
                <li>Persistent</li>
                <li>DOM-based</li>
                <li>Server</li>
                <li>Client</li>
            </ul>
        </dd>
    </dl>
</section>
<section style="font-size: 80%;">
    <h3>Goals of Web Security</h3>
    <dl>
        <dt>CSRF</dt>
        <dd><b>C</b>ross-<b>S</b>ite <b>R</b>equest <b>F</b>orgery.
            Any action that appears to be taken on an authorized user's behalf but isn't actually... including GET.
        </dd>
        <dt>SSRF</dt>
        <dd><b>S</b>erver-<b>S</b>ide <b>R</b>equest <b>F</b>orgery.
            Any action that appears to be taken on an authorized server/service's behalf but isn't actually... including GET.
        </dd>
        <dt>DoS</dt>
        <dd><b>D</b>enial <b>o</b>f <b>S</b>ervice.
            Anything that causes the web site or web service to be unable to serve its normal users.
        </dd>
    </dl>
</section>
<section>
    <h3>High-Value Targerts</h3>
    <ul>
        <li>Personal Information</li>
        <li>Private Information</li>
        <li>Ransom-able Information</li>
        <li>Compute Resources (Mining)</li>
        <li>Network Resources (Proxy/Botnets)</li>
    </ul>
</section>
<section>
    <h3>What's Getting Exploited</h3>
    <p>Mitre's <a href="https://cwe.mitre.org/top25/">Top 25</a> Weaknesses. (Includes non-Web weakenesses.)</p>
</section>
<section>
    <h3>Is your website supposed to...</h3>
    <ul>
        <li>Distribute malware/worms/viruses?</li>
        <li>Vouch for the identity of fraudsters?</li>
        <li>Send spam?</li>
        <li>Distribute pirated software/media?</li>
        <li>Run crypto-miners?</li>
        <li>Host pornography?</li>
        <li>Help attack other services?</li>
    </ul>
</section>
<section>
    <h3>XSS (Cross-Site Scripting)</h3>
    <ul>
        <li>Doesn't need to come from another site</li>
        <li>Inclusion of unauthorized HTML/CSS/JavaScript in page.</li>
    </ul>
</section>
<section>
    <h3>XSS (Cross-Site Scripting)</h3>
    <ul>
        <li>Doesn't need to come from another site</li>
        <li>Inclusion of unauthorized HTML/CSS/JavaScript in page.</li>
    </ul>
</section>
<section>
    <h3>XSS Types</h3>
    <p>Where does the bad code come from?</p>
    <dl>
        <dt>Server</dt>
        <dd>URL navigation, <code>&lt;script></code>, <code>&lt;link</code>, <code>src=</code>, ...</dd>
        <dt>Client</dt>
        <dd>Bad code comes from an AJAX call.</dd>
        <dt>DOM</dt>
        <dd>When bad code is generated by code on the client that modifies the DOM.</dd>
    </dl>
</section>
<section>
    <h3>XSS Types</h3>
    <p>How long is the malicious code around?</p>
    <dl>
        <dt>Reflected (Type 1)</dt>
        <dd>Provided by a single server response as an immediate response to a malicious request.</dd>
        <dt>Persistent (Type 2)</dt>
        <dd>Provided by any number of server responses. The malicious code is stored on the server.</dd>
    </dl>
</section>
<section>
    <h3>XSS Types</h3>
    <table>
        <thead>
            <tr>
                <td></td>
                <td>Server</td>
                <td>Client</td>
                <td>DOM</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Reflected</td>
                <td>Reflected Server XSS</td>
                <td>Reflected Client XSS</td>
                <td>Reflected DOM XSS</td>
            </tr>
            <tr>
                <td>Stored</td>
                <td>Stored Server XSS</td>
                <td>Stored Client XSS</td>
                <td>Stored DOM XSS</td>
            </tr>
        </tbody>
    </table>
</section>
<section>
    <h3>Reflected Server XSS Example</h3>
    <ol>
        <li>Error page generated server side that complains about incorrect query parameters.</li>
        <li>Error page shows user their incorrect query parameters.</li>
        <li>Error page does not contents of query parameters from being interpreted by the browser as HTML/CSS/JS code.</li>
    </ol>
</section>
<section>
    <h3>Stored Server XSS Example</h3>
    <ol>
        <li>User profile page on server allows user to enter a description or bio for themselves.</li>
        <li>Bio is stored on server.</li>
        <li>Anyone navigating to the page sees the user's custom bio.</li>
        <li>Someone sets their bio to contain HTML/CSS/JS code.</li>
    </ol>
</section>
<section>
    <h3>Server XSS Prevention</h3>
    <ul>
        <li>Check incoming POST/GET parameters, paths, & uploads for validity.
            <ul>
                <li>Should a user be able to enter their name as <code>&lt;script></code>?</li>
            </ul>
        </li>
        <li>Apply HTML/CSS/JS escaping to anything filled in.
            <ul>
                <li>Use built-in library functions to change <code>&lt;</code> to <code>&amp;lt;</code>.</li>
            </ul>
        </li>
    </ul>
</section>
{% endblock %}